var documenterSearchIndex = {"docs":
[{"location":"api/browser_context/#BrowserContext","page":"BrowserContext","title":"BrowserContext","text":"","category":"section"},{"location":"api/browser_context/","page":"BrowserContext","title":"BrowserContext","text":"BrowserContext\nnew_page\ncreate_page\npages\nBase.close(::BrowserContext)\nBase.show(::IO, ::BrowserContext)","category":"page"},{"location":"api/browser_context/#ChromeDevToolsLite.BrowserContext","page":"BrowserContext","title":"ChromeDevToolsLite.BrowserContext","text":"BrowserContext\n\nRepresents an isolated browser context that contains a set of pages.\n\n\n\n\n\n","category":"type"},{"location":"api/browser_context/#ChromeDevToolsLite.new_page","page":"BrowserContext","title":"ChromeDevToolsLite.new_page","text":"create_page(context::BrowserContext) -> Page\n\nCreates a new page in the context.\n\n\n\n\n\n","category":"function"},{"location":"api/browser_context/#ChromeDevToolsLite.create_page","page":"BrowserContext","title":"ChromeDevToolsLite.create_page","text":"create_page(context::BrowserContext) -> Page\n\nCreates a new page in the context.\n\n\n\n\n\n","category":"function"},{"location":"api/browser_context/#ChromeDevToolsLite.pages","page":"BrowserContext","title":"ChromeDevToolsLite.pages","text":"pages(context::BrowserContext) -> Vector{Page}\n\nLists all pages in the context.\n\n\n\n\n\n","category":"function"},{"location":"api/browser_context/#Base.close-Tuple{BrowserContext}","page":"BrowserContext","title":"Base.close","text":"Base.close(context::BrowserContext)\n\nEnsures proper cleanup of context resources.\n\n\n\n\n\n","category":"method"},{"location":"api/browser_context/#Base.show-Tuple{IO, BrowserContext}","page":"BrowserContext","title":"Base.show","text":"Base.show(io::IO, context::BrowserContext)\n\nCustom display for BrowserContext instances.\n\n\n\n\n\n","category":"method"},{"location":"api/browser_context/","page":"BrowserContext","title":"BrowserContext","text":"The BrowserContext type represents an isolated browser context, similar to an incognito window.","category":"page"},{"location":"api/browser_context/#Examples","page":"BrowserContext","title":"Examples","text":"","category":"section"},{"location":"api/browser_context/","page":"BrowserContext","title":"BrowserContext","text":"# From examples/17_browser_context_test.jl\nbrowser = launch_browser()\n\n# Create multiple contexts\ncontext1 = new_context(browser)\ncontext2 = new_context(browser)\nall_contexts = contexts(browser)\n\n# Create pages in different contexts\npage1 = new_page(context1)\npage2 = new_page(context1)\ncontext1_pages = pages(context1)\n\n# Demonstrate context isolation\ngoto(page1, \"https://example.com\")\ngoto(page2, \"https://google.com\")\n\n# Cleanup contexts\nclose(context1)","category":"page"},{"location":"api/browser_context/#Error-Handling","page":"BrowserContext","title":"Error Handling","text":"","category":"section"},{"location":"api/browser_context/","page":"BrowserContext","title":"BrowserContext","text":"Context operations can throw:","category":"page"},{"location":"api/browser_context/","page":"BrowserContext","title":"BrowserContext","text":"ConnectionError: When there are issues with the CDP connection\nTimeoutError: When operations exceed their timeout limit","category":"page"},{"location":"api/browser_context/","page":"BrowserContext","title":"BrowserContext","text":"Example error handling:","category":"page"},{"location":"api/browser_context/","page":"BrowserContext","title":"BrowserContext","text":"try\n    context = new_context(browser)\n    page = new_page(context)\n    goto(page, \"https://example.com\", Dict(\"timeout\" => 5000))\ncatch e\n    if e isa TimeoutError\n        println(\"Operation timed out\")\n    elseif e isa ConnectionError\n        println(\"CDP connection failed\")\n    else\n        rethrow(e)\n    end\nfinally\n    # Always clean up resources\n    close(context)\nend","category":"page"},{"location":"api/element_handle/#ElementHandle","page":"ElementHandle","title":"ElementHandle","text":"","category":"section"},{"location":"api/element_handle/","page":"ElementHandle","title":"ElementHandle","text":"ElementHandle","category":"page"},{"location":"api/element_handle/#ChromeDevToolsLite.ElementHandle","page":"ElementHandle","title":"ChromeDevToolsLite.ElementHandle","text":"ElementHandle\n\nRepresents a handle to a DOM element in a page.\n\n\n\n\n\n","category":"type"},{"location":"api/element_handle/","page":"ElementHandle","title":"ElementHandle","text":"The ElementHandle type represents a reference to a DOM element within a page.","category":"page"},{"location":"api/element_handle/#Interaction-Methods","page":"ElementHandle","title":"Interaction Methods","text":"","category":"section"},{"location":"api/element_handle/","page":"ElementHandle","title":"ElementHandle","text":"click(::ElementHandle)\ntype_text(::ElementHandle, ::String)\ncheck\nuncheck\nselect_option(::ElementHandle, ::String)","category":"page"},{"location":"api/element_handle/#ChromeDevToolsLite.click-Tuple{ElementHandle}","page":"ElementHandle","title":"ChromeDevToolsLite.click","text":"click(element::ElementHandle; options=Dict()) -> Nothing\n\nClicks the element.\n\n\n\n\n\n","category":"method"},{"location":"api/element_handle/#ChromeDevToolsLite.type_text-Tuple{ElementHandle, String}","page":"ElementHandle","title":"ChromeDevToolsLite.type_text","text":"type_text(element::ElementHandle, text::AbstractString; options=Dict()) -> Nothing\n\nTypes text into the element.\n\n\n\n\n\n","category":"method"},{"location":"api/element_handle/#ChromeDevToolsLite.check","page":"ElementHandle","title":"ChromeDevToolsLite.check","text":"check(element::ElementHandle; options=Dict()) -> Nothing\n\nChecks a checkbox or radio button element.\n\n\n\n\n\n","category":"function"},{"location":"api/element_handle/#ChromeDevToolsLite.uncheck","page":"ElementHandle","title":"ChromeDevToolsLite.uncheck","text":"uncheck(element::ElementHandle; options=Dict()) -> Nothing\n\nUnchecks a checkbox element.\n\n\n\n\n\n","category":"function"},{"location":"api/element_handle/#ChromeDevToolsLite.select_option-Tuple{ElementHandle, String}","page":"ElementHandle","title":"ChromeDevToolsLite.select_option","text":"select_option(element::ElementHandle, value::AbstractString; options=Dict()) -> Nothing\n\nSelects an option in a select element by its value.\n\n\n\n\n\n","category":"method"},{"location":"api/element_handle/#State-and-Property-Methods","page":"ElementHandle","title":"State and Property Methods","text":"","category":"section"},{"location":"api/element_handle/","page":"ElementHandle","title":"ElementHandle","text":"is_visible(::ElementHandle)\nget_text(::ElementHandle)\nget_attribute(::ElementHandle, ::String)\nevaluate_handle(::ElementHandle, ::String)\nBase.show(::IO, ::ElementHandle)\nBase.close(::ElementHandle)","category":"page"},{"location":"api/element_handle/#ChromeDevToolsLite.is_visible-Tuple{ElementHandle}","page":"ElementHandle","title":"ChromeDevToolsLite.is_visible","text":"is_visible(element::ElementHandle) -> Bool\n\nChecks if the element is visible on the page.\n\n\n\n\n\n","category":"method"},{"location":"api/element_handle/#ChromeDevToolsLite.get_text-Tuple{ElementHandle}","page":"ElementHandle","title":"ChromeDevToolsLite.get_text","text":"get_text(element::ElementHandle) -> AbstractString\n\nGets the text content of the element.\n\n\n\n\n\n","category":"method"},{"location":"api/element_handle/#ChromeDevToolsLite.get_attribute-Tuple{ElementHandle, String}","page":"ElementHandle","title":"ChromeDevToolsLite.get_attribute","text":"get_attribute(element::ElementHandle, name::AbstractString) -> Union{AbstractString, Nothing}\n\nGets the value of the specified attribute.\n\n\n\n\n\n","category":"method"},{"location":"api/element_handle/#ChromeDevToolsLite.evaluate_handle-Tuple{ElementHandle, String}","page":"ElementHandle","title":"ChromeDevToolsLite.evaluate_handle","text":"evaluate_handle(element::ElementHandle, expression::AbstractString) -> Any\n\nEvaluates JavaScript expression in the context of the element. The expression will receive the element as its first argument.\n\nArguments\n\nelement::ElementHandle: The element to evaluate against\nexpression::AbstractString: JavaScript expression to evaluate\n\nExample\n\n# Check if element is checked\nis_checked = evaluate_handle(element, \"el => el.checked\")\n\n\n\n\n\n","category":"method"},{"location":"api/element_handle/#Base.show-Tuple{IO, ElementHandle}","page":"ElementHandle","title":"Base.show","text":"Base.show(io::IO, element::ElementHandle)\n\nCustom display for ElementHandle instances.\n\n\n\n\n\n","category":"method"},{"location":"api/element_handle/#Base.close-Tuple{ElementHandle}","page":"ElementHandle","title":"Base.close","text":"Base.close(element::ElementHandle)\n\nEnsures proper cleanup of element resources.\n\n\n\n\n\n","category":"method"},{"location":"api/element_handle/#check","page":"ElementHandle","title":"check","text":"","category":"section"},{"location":"api/element_handle/","page":"ElementHandle","title":"ElementHandle","text":"check(element::ElementHandle; options::Dict=Dict())","category":"page"},{"location":"api/element_handle/","page":"ElementHandle","title":"ElementHandle","text":"Check a checkbox or radio button.","category":"page"},{"location":"api/element_handle/","page":"ElementHandle","title":"ElementHandle","text":"Example from examples/19_checkbox_comprehensive_test.jl:","category":"page"},{"location":"api/element_handle/","page":"ElementHandle","title":"ElementHandle","text":"checkbox = query_selector(page, \"#simple\")\ncheck(checkbox)\n@assert evaluate_handle(checkbox, \"el => el.checked\") \"Checkbox should be checked\"","category":"page"},{"location":"api/element_handle/#uncheck","page":"ElementHandle","title":"uncheck","text":"","category":"section"},{"location":"api/element_handle/","page":"ElementHandle","title":"ElementHandle","text":"uncheck(element::ElementHandle; options::Dict=Dict())","category":"page"},{"location":"api/element_handle/","page":"ElementHandle","title":"ElementHandle","text":"Uncheck a checkbox.","category":"page"},{"location":"api/element_handle/","page":"ElementHandle","title":"ElementHandle","text":"Example from examples/19_checkbox_comprehensive_test.jl:","category":"page"},{"location":"api/element_handle/","page":"ElementHandle","title":"ElementHandle","text":"checked_box = query_selector(page, \"#checked\")\n@assert evaluate_handle(checked_box, \"el => el.checked\") \"Should start checked\"\nuncheck(checked_box)\n@assert !evaluate_handle(checked_box, \"el => el.checked\") \"Should be unchecked\"","category":"page"},{"location":"api/element_handle/#select_option","page":"ElementHandle","title":"select_option","text":"","category":"section"},{"location":"api/element_handle/","page":"ElementHandle","title":"ElementHandle","text":"select_option(element::ElementHandle, value::String; options::Dict=Dict())","category":"page"},{"location":"api/element_handle/","page":"ElementHandle","title":"ElementHandle","text":"Select an option in a dropdown.","category":"page"},{"location":"api/element_handle/#State-and-Property-Methods-2","page":"ElementHandle","title":"State and Property Methods","text":"","category":"section"},{"location":"api/element_handle/#is_visible","page":"ElementHandle","title":"is_visible","text":"","category":"section"},{"location":"api/element_handle/","page":"ElementHandle","title":"ElementHandle","text":"is_visible(element::ElementHandle) -> Bool","category":"page"},{"location":"api/element_handle/","page":"ElementHandle","title":"ElementHandle","text":"Check if the element is visible.","category":"page"},{"location":"api/element_handle/#get_text","page":"ElementHandle","title":"get_text","text":"","category":"section"},{"location":"api/element_handle/","page":"ElementHandle","title":"ElementHandle","text":"get_text(element::ElementHandle) -> String","category":"page"},{"location":"api/element_handle/","page":"ElementHandle","title":"ElementHandle","text":"Get the element's text content.","category":"page"},{"location":"api/element_handle/#get_attribute","page":"ElementHandle","title":"get_attribute","text":"","category":"section"},{"location":"api/element_handle/","page":"ElementHandle","title":"ElementHandle","text":"get_attribute(element::ElementHandle, name::String) -> Union{String, Nothing}","category":"page"},{"location":"api/element_handle/","page":"ElementHandle","title":"ElementHandle","text":"Get the value of the specified attribute.","category":"page"},{"location":"api/element_handle/#evaluate_handle","page":"ElementHandle","title":"evaluate_handle","text":"","category":"section"},{"location":"api/element_handle/","page":"ElementHandle","title":"ElementHandle","text":"evaluate_handle(element::ElementHandle, expression::String) -> Any","category":"page"},{"location":"api/element_handle/","page":"ElementHandle","title":"ElementHandle","text":"Evaluates a JavaScript expression in the context of the element. The expression receives the element as its first argument.","category":"page"},{"location":"api/element_handle/","page":"ElementHandle","title":"ElementHandle","text":"Example:","category":"page"},{"location":"api/element_handle/","page":"ElementHandle","title":"ElementHandle","text":"# Get computed style\nstyle = evaluate_handle(element, \"el => window.getComputedStyle(el).backgroundColor\")\n\n# Check if element is checked\nis_checked = evaluate_handle(element, \"el => el.checked\")","category":"page"},{"location":"api/element_handle/#Examples","page":"ElementHandle","title":"Examples","text":"","category":"section"},{"location":"api/element_handle/#Basic-Element-Interactions","page":"ElementHandle","title":"Basic Element Interactions","text":"","category":"section"},{"location":"api/element_handle/","page":"ElementHandle","title":"ElementHandle","text":"# From examples/04_element_handling.jl\nelements = query_selector_all(page, \".item\")\nfor element in elements\n    # Get text content\n    text = get_text(element)\n    println(\"Element text: \\$text\")\n\n    # Check visibility\n    if is_visible(element)\n        println(\"Element is visible\")\n    end\n\n    # Get attributes\n    class_attr = get_attribute(element, \"class\")\n    println(\"Class attribute: \\$class_attr\")\nend","category":"page"},{"location":"api/element_handle/#Form-Handling","page":"ElementHandle","title":"Form Handling","text":"","category":"section"},{"location":"api/element_handle/","page":"ElementHandle","title":"ElementHandle","text":"# From examples/07_checkbox_test.jl\n# Handle checkboxes\ncheckbox = query_selector(page, \"#notifications\")\ncheck(checkbox)\nis_checked = evaluate_handle(checkbox, \"el => el.checked\")\n@assert is_checked \"Checkbox should be checked\"\n\n# Handle dropdowns\nselect = query_selector(page, \"#color\")\nselect_option(select, \"blue\")\nvalue = get_attribute(select, \"value\")\n@assert value == \"blue\" \"Select value should be blue\"","category":"page"},{"location":"api/element_handle/#Element-Screenshots","page":"ElementHandle","title":"Element Screenshots","text":"","category":"section"},{"location":"api/element_handle/","page":"ElementHandle","title":"ElementHandle","text":"# From examples/16_screenshot_comprehensive_test.jl\nspecial_item = query_selector(page, \".item.special\")\nscreenshot(special_item, \"element.png\")","category":"page"},{"location":"api/element_handle/#Error-Handling","page":"ElementHandle","title":"Error Handling","text":"","category":"section"},{"location":"api/element_handle/","page":"ElementHandle","title":"ElementHandle","text":"Element operations can throw:","category":"page"},{"location":"api/element_handle/","page":"ElementHandle","title":"ElementHandle","text":"ElementNotFoundError: When the element becomes detached\nTimeoutError: When operations exceed their timeout limit","category":"page"},{"location":"api/utilities/#Utilities","page":"Utilities","title":"Utilities","text":"","category":"section"},{"location":"api/utilities/#Error-Types","page":"Utilities","title":"Error Types","text":"","category":"section"},{"location":"api/utilities/","page":"Utilities","title":"Utilities","text":"ElementNotFoundError\nNavigationError\nEvaluationError\nTimeoutError\nConnectionError","category":"page"},{"location":"api/utilities/#ChromeDevToolsLite.ElementNotFoundError","page":"Utilities","title":"ChromeDevToolsLite.ElementNotFoundError","text":"ElementNotFoundError\n\nError raised when an element cannot be found on the page.\n\n\n\n\n\n","category":"type"},{"location":"api/utilities/#ChromeDevToolsLite.NavigationError","page":"Utilities","title":"ChromeDevToolsLite.NavigationError","text":"NavigationError\n\nError raised when page navigation fails.\n\n\n\n\n\n","category":"type"},{"location":"api/utilities/#ChromeDevToolsLite.EvaluationError","page":"Utilities","title":"ChromeDevToolsLite.EvaluationError","text":"EvaluationError\n\nError raised when JavaScript evaluation fails.\n\n\n\n\n\n","category":"type"},{"location":"api/utilities/#ChromeDevToolsLite.TimeoutError","page":"Utilities","title":"ChromeDevToolsLite.TimeoutError","text":"TimeoutError <: ChromeDevToolsError\n\nError raised when an operation times out.\n\n\n\n\n\n","category":"type"},{"location":"api/utilities/#ChromeDevToolsLite.ConnectionError","page":"Utilities","title":"ChromeDevToolsLite.ConnectionError","text":"ConnectionError\n\nError raised when there are issues with the CDP connection.\n\n\n\n\n\n","category":"type"},{"location":"api/utilities/#Error-Handling-Examples","page":"Utilities","title":"Error Handling Examples","text":"","category":"section"},{"location":"api/utilities/","page":"Utilities","title":"Utilities","text":"# From examples/21_error_handling_comprehensive_test.jl\n\n# Element not found\ntry\n    element = query_selector(page, \"#nonexistent\")\n    click(element)\ncatch e\n    if e isa ElementNotFoundError\n        println(\"Element does not exist in DOM\")\n    end\nend\n\n# Navigation failure\ntry\n    goto(page, \"https://nonexistent.example.com\")\ncatch e\n    if e isa NavigationError\n        println(\"Failed to navigate to page\")\n    end\nend\n\n# JavaScript evaluation error\ntry\n    evaluate(page, \"nonexistentFunction()\")\ncatch e\n    if e isa EvaluationError\n        println(\"JavaScript evaluation failed\")\n    end\nend\n\n# Operation timeout\ntry\n    wait_for_selector(page, \"#willNeverAppear\", timeout=1000)\ncatch e\n    if e isa TimeoutError\n        println(\"Operation timed out\")\n    end\nend","category":"page"},{"location":"api/utilities/#Timeout-Utilities","page":"Utilities","title":"Timeout Utilities","text":"","category":"section"},{"location":"api/utilities/","page":"Utilities","title":"Utilities","text":"All operations support configurable timeouts to control operation duration:","category":"page"},{"location":"api/utilities/","page":"Utilities","title":"Utilities","text":"# From examples/20_timeout_comprehensive_test.jl\n\n# Wait for selector with explicit timeout\ntry\n    element = wait_for_selector(page, \"#delayed\", timeout=3000)\ncatch e\n    @assert e isa TimeoutError \"Should throw TimeoutError\"\nend\n\n# Operation timeouts via options dictionary\nclick(page, \"#clickMe\", Dict(\"timeout\" => 1000))\ntype_text(page, \"#typeHere\", \"Test Text\", Dict(\"timeout\" => 1000))\n\n# JavaScript evaluation timeout\ntry\n    evaluate(page, \"new Promise(resolve => setTimeout(resolve, 2000))\",\n            Dict(\"timeout\" => 1000))\ncatch e\n    @assert e isa TimeoutError \"Should throw TimeoutError\"\nend","category":"page"},{"location":"api/utilities/#Default-Timeouts","page":"Utilities","title":"Default Timeouts","text":"","category":"section"},{"location":"api/utilities/","page":"Utilities","title":"Utilities","text":"Page navigation: 30 seconds\nElement waiting: 30 seconds\nScript evaluation: 30 seconds","category":"page"},{"location":"api/utilities/","page":"Utilities","title":"Utilities","text":"You can override these defaults in individual function calls using the options parameter:","category":"page"},{"location":"api/utilities/","page":"Utilities","title":"Utilities","text":"options = Dict(\"timeout\" => 5000)  # 5 seconds\nwait_for_selector(page, \"#content\", options)\nclick(page, \"#button\", options)\ntype_text(page, \"#input\", \"text\", options)","category":"page"},{"location":"api/utilities/#Base-Operations","page":"Utilities","title":"Base Operations","text":"","category":"section"},{"location":"api/utilities/","page":"Utilities","title":"Utilities","text":"The package implements several Base operations for its core types:","category":"page"},{"location":"api/utilities/","page":"Utilities","title":"Utilities","text":"Base.close(::AbstractBrowser)\nBase.close(::AbstractBrowserContext)\nBase.close(::AbstractPage)\nBase.close(::AbstractElementHandle)\nBase.show(::IO, ::AbstractBrowser)\nBase.show(::IO, ::AbstractBrowserContext)\nBase.show(::IO, ::AbstractPage)\nBase.show(::IO, ::AbstractElementHandle)","category":"page"},{"location":"api/utilities/#Base.close-Tuple{AbstractBrowser}","page":"Utilities","title":"Base.close","text":"close(browser::AbstractBrowser)\n\nClose the browser instance and clean up associated resources.\n\nExamples\n\nbrowser = Browser()\ntry\n    # Use browser\nfinally\n    close(browser)\nend\n\n\n\n\n\n","category":"method"},{"location":"api/utilities/#Base.close-Tuple{AbstractBrowserContext}","page":"Utilities","title":"Base.close","text":"close(context::AbstractBrowserContext)\n\nClose the browser context and all its associated pages.\n\nExamples\n\nbrowser = Browser()\ncontext = new_context(browser)\ntry\n    # Use context\nfinally\n    close(context)\nend\n\n\n\n\n\n","category":"method"},{"location":"api/utilities/#Base.close-Tuple{AbstractPage}","page":"Utilities","title":"Base.close","text":"close(page::AbstractPage)\n\nClose the page and clean up associated resources.\n\nExamples\n\npage = new_page(context)\ntry\n    # Use page\nfinally\n    close(page)\nend\n\n\n\n\n\n","category":"method"},{"location":"api/utilities/#Base.close-Tuple{AbstractElementHandle}","page":"Utilities","title":"Base.close","text":"close(element::AbstractElementHandle)\n\nClean up resources associated with the element handle.\n\nExamples\n\nelement = query_selector(page, \"#my-element\")\ntry\n    # Use element\nfinally\n    close(element)\nend\n\n\n\n\n\n","category":"method"},{"location":"api/utilities/#Base.show-Tuple{IO, AbstractBrowser}","page":"Utilities","title":"Base.show","text":"show(io::IO, browser::AbstractBrowser)\n\nDisplay information about the browser instance.\n\nExamples\n\nbrowser = Browser()\nprintln(browser)  # outputs: Browser()\n\n\n\n\n\n","category":"method"},{"location":"api/utilities/#Base.show-Tuple{IO, AbstractBrowserContext}","page":"Utilities","title":"Base.show","text":"show(io::IO, context::AbstractBrowserContext)\n\nDisplay information about the browser context.\n\nExamples\n\ncontext = new_context(browser)\nprintln(context)  # outputs: BrowserContext()\n\n\n\n\n\n","category":"method"},{"location":"api/utilities/#Base.show-Tuple{IO, AbstractPage}","page":"Utilities","title":"Base.show","text":"show(io::IO, page::AbstractPage)\n\nDisplay information about the page.\n\nExamples\n\npage = new_page(context)\nprintln(page)  # outputs: Page(url=about:blank)\n\n\n\n\n\n","category":"method"},{"location":"api/utilities/#Base.show-Tuple{IO, AbstractElementHandle}","page":"Utilities","title":"Base.show","text":"show(io::IO, element::AbstractElementHandle)\n\nDisplay information about the element handle.\n\nExamples\n\nelement = query_selector(page, \"#my-element\")\nprintln(element)  # outputs: ElementHandle()\n\n\n\n\n\n","category":"method"},{"location":"api/utilities/#Resource-Management","page":"Utilities","title":"Resource Management","text":"","category":"section"},{"location":"api/utilities/#Best-Practices","page":"Utilities","title":"Best Practices","text":"","category":"section"},{"location":"api/utilities/","page":"Utilities","title":"Utilities","text":"# Always use try-finally for proper cleanup\nbrowser = Browser()\ncontext = new_context(browser)\npage = new_page(context)\n\ntry\n    # Your page operations here\n    goto(page, \"https://example.com\")\n    element = wait_for_selector(page, \".content\")\nfinally\n    # Clean up in reverse order of creation\n    close(page)\n    close_context(context)\n    close(browser)\nend","category":"page"},{"location":"api/utilities/#Memory-Management-Tips","page":"Utilities","title":"Memory Management Tips","text":"","category":"section"},{"location":"api/utilities/","page":"Utilities","title":"Utilities","text":"Close pages when no longer needed\nClean up contexts after use\nAlways close the browser in a finally block\nUse shorter timeouts for faster failure detection","category":"page"},{"location":"api/utilities/#Connection-Management","page":"Utilities","title":"Connection Management","text":"","category":"section"},{"location":"api/utilities/","page":"Utilities","title":"Utilities","text":"# Robust connection handling\ntry\n    browser = Browser()\n    if browser === nothing\n        error(\"Failed to create browser instance\")\n    end\n\n    # Your browser operations here\ncatch e\n    if e isa ConnectionError\n        println(\"Browser connection failed, retrying...\")\n        # Implement retry logic here\n    end\nfinally\n    browser !== nothing && close(browser)\nend","category":"page"},{"location":"getting_started/#Getting-Started-with-ChromeDevToolsLite.jl","page":"Getting Started","title":"Getting Started with ChromeDevToolsLite.jl","text":"","category":"section"},{"location":"getting_started/#Installation","page":"Getting Started","title":"Installation","text":"","category":"section"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"using Pkg\nPkg.add(\"ChromeDevToolsLite\")","category":"page"},{"location":"getting_started/#Basic-Usage","page":"Getting Started","title":"Basic Usage","text":"","category":"section"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"Here's a simple example that demonstrates the core functionality:","category":"page"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"using ChromeDevToolsLite\n\n# Launch a browser\nbrowser = launch_browser()\n\n# Create a new context and page\ncontext = new_context(browser)\npage = new_page(context)\n\n# Navigate to a website\ngoto(page, \"https://example.com\")\n\n# Find and interact with elements\nbutton = wait_for_selector(page, \"#submit-button\")\nclick(button)\n\n# Fill out a form\ninput = query_selector(page, \"#search\")\ntype_text(input, \"search query\")\n\n# Take a screenshot\nscreenshot(page)\n\n# Clean up\nclose(browser)","category":"page"},{"location":"getting_started/#Key-Concepts","page":"Getting Started","title":"Key Concepts","text":"","category":"section"},{"location":"getting_started/#Browser-Management","page":"Getting Started","title":"Browser Management","text":"","category":"section"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"A Browser instance represents a Chromium browser process\nEach browser can have multiple BrowserContexts (like incognito windows)\nEach context can have multiple Pages","category":"page"},{"location":"getting_started/#Page-Navigation","page":"Getting Started","title":"Page Navigation","text":"","category":"section"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"Use goto to navigate to URLs\nwait_for_selector ensures elements are available\ncontent retrieves the page's HTML","category":"page"},{"location":"getting_started/#Element-Interaction","page":"Getting Started","title":"Element Interaction","text":"","category":"section"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"Find elements using CSS selectors\nInteract using methods like click, type_text\nCheck element state with is_visible, get_text","category":"page"},{"location":"getting_started/#Error-Handling","page":"Getting Started","title":"Error Handling","text":"","category":"section"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"The package includes specific error types:","category":"page"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"TimeoutError: Operation exceeded time limit\nElementNotFoundError: Element not found\nNavigationError: Navigation failed\nConnectionError: CDP connection issues","category":"page"},{"location":"getting_started/#Best-Practices","page":"Getting Started","title":"Best Practices","text":"","category":"section"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"Always close resources:","category":"page"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"try\n    # Your code here\nfinally\n    close(browser)\nend","category":"page"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"Use timeouts appropriately:","category":"page"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"# Wait up to 5 seconds for element\nelement = wait_for_selector(page, \"#slow-element\", timeout=5000)","category":"page"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"Handle errors gracefully:","category":"page"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"try\n    element = query_selector(page, \"#maybe-exists\")\n    if !isnothing(element)\n        click(element)\n    end\ncatch e\n    if e isa ElementNotFoundError\n        @warn \"Element not found\"\n    else\n        rethrow(e)\n    end\nend","category":"page"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"Working with Multiple Elements:","category":"page"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"# From examples/15_query_selector_all_test.jl\nall_items = query_selector_all(page, \".item\")\nfor item in items\n    if is_visible(item)\n        text = get_text(item)\n        testid = get_attribute(item, \"data-testid\")\n        println(\"Item \\$testid: \\$text\")\n    end\nend","category":"page"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"Form Interactions:","category":"page"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"# From examples/03_page_interactions.jl\ntype_text(page, \"#name\", \"John Doe\")\nselect_option(page, \"#color\", \"blue\")\nclick(page, \"button[type='submit']\")\n\n# Verify submission\nresult_text = get_text(page, \"#result\")\n@assert contains(result_text, \"John Doe\")","category":"page"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"Screenshots:","category":"page"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"# From examples/16_screenshot_comprehensive_test.jl\n# Full page screenshot\nscreenshot(page, \"full_page.png\")\n\n# Element-specific screenshot\nheader = query_selector(page, \"header\")\nscreenshot(header, \"header.png\")","category":"page"},{"location":"api/browser/#Browser","page":"Browser","title":"Browser","text":"","category":"section"},{"location":"api/browser/","page":"Browser","title":"Browser","text":"Browser\nBrowserProcess\nlaunch_browser\nlaunch_browser_process","category":"page"},{"location":"api/browser/#ChromeDevToolsLite.Browser","page":"Browser","title":"ChromeDevToolsLite.Browser","text":"Browser\n\nRepresents a browser instance with an active CDP session and process management.\n\n\n\n\n\n","category":"type"},{"location":"api/browser/#ChromeDevToolsLite.BrowserProcess","page":"Browser","title":"ChromeDevToolsLite.BrowserProcess","text":"BrowserProcess\n\nRepresents a running browser process with its debugging endpoint and configuration options.\n\n\n\n\n\n","category":"type"},{"location":"api/browser/#ChromeDevToolsLite.launch_browser","page":"Browser","title":"ChromeDevToolsLite.launch_browser","text":"launch_browser(; headless::Bool = true, port::Union{Int, Nothing} = nothing,\n    verbose::Bool = false, endpoint::Union{String, Nothing} = nothing)\n\nLaunch a new browser instance with the specified options. Or connect to an existing browser process at the given endpoint.\n\n\n\n\n\n","category":"function"},{"location":"api/browser/#ChromeDevToolsLite.launch_browser_process","page":"Browser","title":"ChromeDevToolsLite.launch_browser_process","text":"launch_browser_process(;\n    headless::Bool = true,\n    port::Union{Int, Nothing} = nothing,\n    endpoint::Union{String, Nothing} = nothing,\n    verbose::Bool = false)\n\nLaunch a new browser process with the specified options. Or connect to an existing browser process at the given endpoint.\n\n\n\n\n\n","category":"function"},{"location":"api/browser/#Browser-Context-Methods","page":"Browser","title":"Browser Context Methods","text":"","category":"section"},{"location":"api/browser/","page":"Browser","title":"Browser","text":"new_context\ncreate_browser_context\ncontexts\nBase.close(::Browser)\nBase.show(::IO, ::Browser)\nBase.show(::IO, ::BrowserProcess)\nkill_browser_process","category":"page"},{"location":"api/browser/#ChromeDevToolsLite.new_context","page":"Browser","title":"ChromeDevToolsLite.new_context","text":"create_browser_context(browser::Browser) -> BrowserContext\n\nCreates a new browser context.\n\n\n\n\n\n","category":"function"},{"location":"api/browser/#ChromeDevToolsLite.create_browser_context","page":"Browser","title":"ChromeDevToolsLite.create_browser_context","text":"create_browser_context(browser::Browser) -> BrowserContext\n\nCreates a new browser context.\n\n\n\n\n\n","category":"function"},{"location":"api/browser/#ChromeDevToolsLite.contexts","page":"Browser","title":"ChromeDevToolsLite.contexts","text":"contexts(browser::Browser) -> Vector{BrowserContext}\n\nRetrieves all browser contexts.\n\n\n\n\n\n","category":"function"},{"location":"api/browser/#Base.close-Tuple{Browser}","page":"Browser","title":"Base.close","text":"Base.close(browser::Browser)\n\nEnsures proper cleanup of browser resources.\n\n\n\n\n\n","category":"method"},{"location":"api/browser/#Base.show-Tuple{IO, Browser}","page":"Browser","title":"Base.show","text":"Base.show(io::IO, browser::Browser)\n\nCustom display for Browser instances.\n\n\n\n\n\n","category":"method"},{"location":"api/browser/#Base.show-Tuple{IO, BrowserProcess}","page":"Browser","title":"Base.show","text":"Base.show(io::IO, process::BrowserProcess)\n\nCustom display for BrowserProcess instances, showing the process ID and endpoint.\n\n\n\n\n\n","category":"method"},{"location":"api/browser/#ChromeDevToolsLite.kill_browser_process","page":"Browser","title":"ChromeDevToolsLite.kill_browser_process","text":"kill_browser_process(process::BrowserProcess)\n\nTerminate the browser process.\n\n\n\n\n\n","category":"function"},{"location":"api/browser/#Examples","page":"Browser","title":"Examples","text":"","category":"section"},{"location":"api/browser/","page":"Browser","title":"Browser","text":"# Basic browser setup with error handling\nbrowser = launch_browser(headless=true)\ntry\n    context = new_context(browser)\n    page = new_page(context)\n\n    # Navigate to a website\n    goto(page, \"https://example.com\")\n\n    # Do some work...\nfinally\n    close(browser)\nend\n\n# Create a new context\ncontext = new_context(browser)\n\n# Get all contexts\nall_contexts = contexts(browser)\n\n# Close browser when done\nclose(browser)","category":"page"},{"location":"api/browser/#Error-Handling","page":"Browser","title":"Error Handling","text":"","category":"section"},{"location":"api/browser/","page":"Browser","title":"Browser","text":"The browser operations can throw the following errors:","category":"page"},{"location":"api/browser/","page":"Browser","title":"Browser","text":"ConnectionError: When there are issues with the CDP connection\nTimeoutError: When operations exceed their timeout limit","category":"page"},{"location":"api/browser/","page":"Browser","title":"Browser","text":"```","category":"page"},{"location":"contributing/#Contributing-to-ChromeDevToolsLite.jl","page":"Contributing","title":"Contributing to ChromeDevToolsLite.jl","text":"","category":"section"},{"location":"contributing/#Development-Setup","page":"Contributing","title":"Development Setup","text":"","category":"section"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"Clone the repository:","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"git clone https://github.com/svilupp/ChromeDevToolsLite.jl\ncd ChromeDevToolsLite.jl","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"Install dependencies:","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"using Pkg\nPkg.develop(path=\".\")","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"Install Chromium (required for testing):","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"# Ubuntu/Debian\nsudo apt-get install chromium-browser\n\n# macOS\nbrew install chromium","category":"page"},{"location":"contributing/#Project-Structure","page":"Contributing","title":"Project Structure","text":"","category":"section"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"src/: Source code\ntypes/: Core type definitions\ncdp/: Chrome DevTools Protocol handling\nutils/: Utility functions\ntest/: Test suite\nexamples/: Example scripts\ndocs/: Documentation","category":"page"},{"location":"contributing/#Running-Tests","page":"Contributing","title":"Running Tests","text":"","category":"section"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"using Pkg\nPkg.test(\"ChromeDevToolsLite\")","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"Note: Some tests require a running Chromium instance with remote debugging enabled.","category":"page"},{"location":"contributing/#Code-Style-Guidelines","page":"Contributing","title":"Code Style Guidelines","text":"","category":"section"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"Follow Julia style guide\nUse meaningful variable names\nAdd docstrings for all public functions\nInclude examples in docstrings\nWrite unit tests for new functionality","category":"page"},{"location":"contributing/#Adding-New-Features","page":"Contributing","title":"Adding New Features","text":"","category":"section"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"Create a new branch:","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"git checkout -b feature/your-feature-name","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"Implement your changes\nAdd tests\nUpdate documentation\nSubmit a pull request","category":"page"},{"location":"contributing/#Common-Development-Tasks","page":"Contributing","title":"Common Development Tasks","text":"","category":"section"},{"location":"contributing/#Adding-a-New-CDP-Command","page":"Contributing","title":"Adding a New CDP Command","text":"","category":"section"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"Add command definition in appropriate type file\nImplement error handling\nAdd unit tests\nAdd example usage\nUpdate documentation","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"Example from our codebase:","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"# From examples/14_evaluate_handle_test.jl\n# Implementation of evaluate_handle\nelement = query_selector(page, \"#myButton\")\nresult = evaluate_handle(element, \"el => el.textContent\")","category":"page"},{"location":"contributing/#Testing-Tips","page":"Contributing","title":"Testing Tips","text":"","category":"section"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"Use MockWebSocket for CDP tests\nTest error conditions and timeouts\nVerify edge cases","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"Example test pattern:","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"# From examples/05_error_handling.jl\ntry\n    element = wait_for_selector(page, \"#non-existent\", timeout=5000)\ncatch e\n    if e isa TimeoutError\n        println(\"Element not found within timeout period\")\n    elseif e isa ElementNotFoundError\n        println(\"Element does not exist on the page\")\n    end\nend","category":"page"},{"location":"contributing/#Documentation","page":"Contributing","title":"Documentation","text":"","category":"section"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"Build documentation locally:","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"using Documenter\ninclude(\"docs/make.jl\")","category":"page"},{"location":"contributing/#Getting-Help","page":"Contributing","title":"Getting Help","text":"","category":"section"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"Open an issue for bugs\nDiscuss major changes in issues first\nJoin Julia Slack for questions","category":"page"},{"location":"examples/#Examples","page":"Examples","title":"Examples","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"This guide showcases practical examples from our test suite demonstrating various ChromeDevToolsLite features.","category":"page"},{"location":"examples/#Browser-and-Page-Management","page":"Examples","title":"Browser and Page Management","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"# From examples/00_browser_test.jl\nbrowser = launch_browser()\ncontext = new_context(browser)\npage = new_page(context)\n\ntry\n    goto(page, \"https://example.com\")\n    title = get_title(page)\n    @assert title == \"Example Domain\"\nfinally\n    close(browser)\nend","category":"page"},{"location":"examples/#Form-Filling","page":"Examples","title":"Form Filling","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"# Fill out a complex form\nform_data = Dict(\n    \"#name\" => \"John Doe\",\n    \"#email\" => \"john@example.com\",\n    \"#country\" => \"US\",\n    \"#terms\" => true\n)\n\nfor (selector, value) in form_data\n    element = query_selector(page, selector)\n    if value isa Bool\n        value ? check(element) : uncheck(element)\n    elseif selector == \"#country\"\n        select_option(element, value)\n    else\n        type_text(element, value)\n    end\nend","category":"page"},{"location":"examples/#Working-with-Multiple-Pages","page":"Examples","title":"Working with Multiple Pages","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"# Open multiple pages\npage1 = new_page(context)\npage2 = new_page(context)\n\n# Navigate each page\ngoto(page1, \"https://example.com/page1\")\ngoto(page2, \"https://example.com/page2\")\n\n# Get all pages\nall_pages = pages(context)","category":"page"},{"location":"examples/#Error-Handling-Examples","page":"Examples","title":"Error Handling Examples","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"try\n    # Wait for dynamic content with timeout\n    element = wait_for_selector(page, \"#dynamic-content\", timeout=5000)\n\n    # Interact if element exists\n    if !isnothing(element) && is_visible(element)\n        click(element)\n    end\ncatch e\n    if e isa TimeoutError\n        @warn \"Element did not appear in time\"\n    elseif e isa ElementNotFoundError\n        @warn \"Element not found\"\n    else\n        rethrow(e)\n    end\nend","category":"page"},{"location":"examples/#Taking-Screenshots","page":"Examples","title":"Taking Screenshots","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"# From examples/16_screenshot_comprehensive_test.jl\n# Full page screenshot\nscreenshot(page, \"full_page.png\")\n\n# Element-specific screenshot\nspecial_item = query_selector(page, \".item.special\")\nscreenshot(special_item, \"element.png\")\n\n# Screenshot with custom clip region\ncontainer = query_selector(page, \".container\")\nbox = get_bounding_box(container)\nscreenshot(page, \"clipped.png\", Dict(\"clip\" => box))\n\n## Element Interaction and Form Handling","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"julia","category":"page"},{"location":"examples/#From-examples/07*checkbox*test.jl","page":"Examples","title":"From examples/07checkboxtest.jl","text":"","category":"section"},{"location":"examples/#Checkbox-interaction","page":"Examples","title":"Checkbox interaction","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"checkbox = queryselector(page, \"#notifications\") check(checkbox) @assert evaluatehandle(checkbox, \"el => el.checked\") \"Checkbox should be checked\"","category":"page"},{"location":"examples/#From-examples/03*page*interactions.jl","page":"Examples","title":"From examples/03pageinteractions.jl","text":"","category":"section"},{"location":"examples/#Form-submission","page":"Examples","title":"Form submission","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"typetext(page, \"#name\", \"John Doe\") selectoption(page, \"#color\", \"blue\") click(page, \"button[type='submit']\")","category":"page"},{"location":"examples/#From-examples/15*query*selector*all*test.jl","page":"Examples","title":"From examples/15queryselectoralltest.jl","text":"","category":"section"},{"location":"examples/#Multiple-element-handling","page":"Examples","title":"Multiple element handling","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"elements = queryselectorall(page, \".item\") for element in elements     if isvisible(element)         text = gettext(element)         testid = get_attribute(element, \"data-testid\")         println(\"Item $testid: $text\")     end end","category":"page"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = ChromeDevToolsLite","category":"page"},{"location":"#ChromeDevToolsLite","page":"Home","title":"ChromeDevToolsLite","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"ChromeDevToolsLite.jl is a lightweight Julia package for browser automation using the Chrome DevTools Protocol (CDP). It provides a simple, intuitive interface for controlling Chrome/Chromium browsers programmatically.","category":"page"},{"location":"#Features","page":"Home","title":"Features","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Browser automation and control via Chrome DevTools Protocol\nPage navigation and interaction with timeouts and error handling\nComprehensive element selection and manipulation\nForm handling (input, checkboxes, dropdowns)\nScreenshot capabilities (full page and elements)\nRobust error handling with specific error types","category":"page"},{"location":"#Quick-Start","page":"Home","title":"Quick Start","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using ChromeDevToolsLite\n\n# Launch browser and navigate\nbrowser = launch_browser()\ncontext = new_context(browser)\npage = new_page(context)\n\ntry\n    # Navigate and wait for content\n    goto(page, \"https://example.com\")\n    element = wait_for_selector(page, \"#content\")\n\n    # Interact with forms\n    type_text(page, \"#search\", \"query\")\n    click(page, \"#submit\")\n\n    # Handle multiple elements\n    items = query_selector_all(page, \".item\")\n    for item in items\n        println(get_text(item))\n    end\n\n    # Take screenshots\n    screenshot(page, \"page.png\")\nfinally\n    close(browser)\nend","category":"page"},{"location":"","page":"Home","title":"Home","text":"See the Getting Started with ChromeDevToolsLite.jl guide for more examples.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"api/cdp/#CDP-Implementation","page":"CDP Implementation","title":"CDP Implementation","text":"","category":"section"},{"location":"api/cdp/","page":"CDP Implementation","title":"CDP Implementation","text":"AbstractCDPMessage\nCDPEvent\nCDPRequest\nCDPResponse\nCDPSession\nAbstractWebSocketConnection\nWebSocketConnection","category":"page"},{"location":"api/cdp/#ChromeDevToolsLite.AbstractCDPMessage","page":"CDP Implementation","title":"ChromeDevToolsLite.AbstractCDPMessage","text":"AbstractCDPMessage\n\nBase type for CDP messages.\n\n\n\n\n\n","category":"type"},{"location":"api/cdp/#ChromeDevToolsLite.CDPEvent","page":"CDP Implementation","title":"ChromeDevToolsLite.CDPEvent","text":"CDPEvent\n\nRepresents a CDP event message with a method and parameters.\n\n\n\n\n\n","category":"type"},{"location":"api/cdp/#ChromeDevToolsLite.CDPRequest","page":"CDP Implementation","title":"ChromeDevToolsLite.CDPRequest","text":"CDPRequest\n\nRepresents a CDP request message with an ID, method, and parameters.\n\n\n\n\n\n","category":"type"},{"location":"api/cdp/#ChromeDevToolsLite.CDPResponse","page":"CDP Implementation","title":"ChromeDevToolsLite.CDPResponse","text":"CDPResponse\n\nRepresents a CDP response message with an ID and either a result or error.\n\n\n\n\n\n","category":"type"},{"location":"api/cdp/#ChromeDevToolsLite.CDPSession","page":"CDP Implementation","title":"ChromeDevToolsLite.CDPSession","text":"CDPSession\n\nRepresents a Chrome DevTools Protocol session managing WebSocket communication and message routing.\n\n\n\n\n\n","category":"type"},{"location":"api/cdp/#ChromeDevToolsLite.AbstractWebSocketConnection","page":"CDP Implementation","title":"ChromeDevToolsLite.AbstractWebSocketConnection","text":"AbstractWebSocketConnection\n\nAbstract type for WebSocket-like connections.\n\n\n\n\n\n","category":"type"},{"location":"api/cdp/#ChromeDevToolsLite.WebSocketConnection","page":"CDP Implementation","title":"ChromeDevToolsLite.WebSocketConnection","text":"WebSocketConnection\n\nWraps a WebSocket connection with CDP-specific functionality.\n\n\n\n\n\n","category":"type"},{"location":"api/cdp/#Session-Methods","page":"CDP Implementation","title":"Session Methods","text":"","category":"section"},{"location":"api/cdp/","page":"CDP Implementation","title":"CDP Implementation","text":"CDPSession(::AbstractWebSocketConnection)\nsend_message\ncreate_cdp_message\nparse_cdp_message\nhandle_cdp_error\nget_next_message_id\nadd_event_listener\nremove_event_listener\nBase.close(::CDPSession)","category":"page"},{"location":"api/cdp/#ChromeDevToolsLite.CDPSession-Tuple{AbstractWebSocketConnection}","page":"CDP Implementation","title":"ChromeDevToolsLite.CDPSession","text":"CDPSession(ws::T; verbose::Bool=false) where T\n\nCreate a new CDP session with the given WebSocket connection.\n\n\n\n\n\n","category":"method"},{"location":"api/cdp/#ChromeDevToolsLite.send_message","page":"CDP Implementation","title":"ChromeDevToolsLite.send_message","text":"send_message(session::CDPSession, msg::CDPRequest) -> Channel{CDPResponse}\n\nSend a CDP request and return a channel that will receive the response. Throws ConnectionError if the session is closed.\n\n\n\n\n\n","category":"function"},{"location":"api/cdp/#ChromeDevToolsLite.create_cdp_message","page":"CDP Implementation","title":"ChromeDevToolsLite.create_cdp_message","text":"create_cdp_message(method::AbstractString, params::AbstractDict{String,<:Any}=Dict()) -> CDPRequest\n\nCreate a new CDP request message with an automatically generated ID.\n\n\n\n\n\n","category":"function"},{"location":"api/cdp/#ChromeDevToolsLite.parse_cdp_message","page":"CDP Implementation","title":"ChromeDevToolsLite.parse_cdp_message","text":"parse_cdp_message(data::AbstractDict{String,<:Any}) -> AbstractCDPMessage\n\nParse a raw CDP message into the appropriate message type.\n\n\n\n\n\n","category":"function"},{"location":"api/cdp/#ChromeDevToolsLite.handle_cdp_error","page":"CDP Implementation","title":"ChromeDevToolsLite.handle_cdp_error","text":"handle_cdp_error(response::Dict) -> Nothing\n\nHandle CDP response errors by throwing appropriate error types.\n\n\n\n\n\n","category":"function"},{"location":"api/cdp/#ChromeDevToolsLite.get_next_message_id","page":"CDP Implementation","title":"ChromeDevToolsLite.get_next_message_id","text":"get_next_message_id() -> Int\n\nGet the next message ID for CDP communication.\n\n\n\n\n\n","category":"function"},{"location":"api/cdp/#ChromeDevToolsLite.add_event_listener","page":"CDP Implementation","title":"ChromeDevToolsLite.add_event_listener","text":"add_event_listener(session::CDPSession, method::AbstractString, callback::Function)\n\nAdd a callback function for a specific CDP event method.\n\n\n\n\n\n","category":"function"},{"location":"api/cdp/#ChromeDevToolsLite.remove_event_listener","page":"CDP Implementation","title":"ChromeDevToolsLite.remove_event_listener","text":"remove_event_listener(session::CDPSession, method::AbstractString, callback::Function)\n\nRemove a callback function for a specific CDP event method.\n\n\n\n\n\n","category":"function"},{"location":"api/cdp/#Base.close-Tuple{CDPSession}","page":"CDP Implementation","title":"Base.close","text":"Base.close(session::CDPSession)\n\nClose the CDP session and clean up resources.\n\n\n\n\n\n","category":"method"},{"location":"api/cdp/#WebSocket-Methods","page":"CDP Implementation","title":"WebSocket Methods","text":"","category":"section"},{"location":"api/cdp/","page":"CDP Implementation","title":"CDP Implementation","text":"Base.write(::WebSocketConnection, ::String)\nBase.read(::WebSocketConnection)\nBase.isopen(::WebSocketConnection)\nBase.close(::WebSocketConnection)","category":"page"},{"location":"api/cdp/#Base.write-Tuple{WebSocketConnection, String}","page":"CDP Implementation","title":"Base.write","text":"Base.write(conn::WebSocketConnection, data::AbstractString)\n\nSend data through the WebSocket connection.\n\n\n\n\n\n","category":"method"},{"location":"api/cdp/#Base.read-Tuple{WebSocketConnection}","page":"CDP Implementation","title":"Base.read","text":"Base.read(conn::WebSocketConnection) -> AbstractString\n\nRead data from the WebSocket connection.\n\n\n\n\n\n","category":"method"},{"location":"api/cdp/#Base.isopen-Tuple{WebSocketConnection}","page":"CDP Implementation","title":"Base.isopen","text":"Base.isopen(conn::WebSocketConnection) -> Bool\n\nCheck if the WebSocket connection is open.\n\n\n\n\n\n","category":"method"},{"location":"api/cdp/#Base.close-Tuple{WebSocketConnection}","page":"CDP Implementation","title":"Base.close","text":"Base.close(conn::WebSocketConnection)\n\nClose the WebSocket connection.\n\n\n\n\n\n","category":"method"},{"location":"api/cdp/#Error-Types","page":"CDP Implementation","title":"Error Types","text":"","category":"section"},{"location":"api/cdp/","page":"CDP Implementation","title":"CDP Implementation","text":"ChromeDevToolsError","category":"page"},{"location":"api/cdp/#ChromeDevToolsLite.ChromeDevToolsError","page":"CDP Implementation","title":"ChromeDevToolsLite.ChromeDevToolsError","text":"ChromeDevToolsError\n\nBase error type for all ChromeDevToolsLite errors.\n\n\n\n\n\n","category":"type"},{"location":"api/cdp/#Utilities","page":"CDP Implementation","title":"Utilities","text":"","category":"section"},{"location":"api/cdp/","page":"CDP Implementation","title":"CDP Implementation","text":"retry_with_timeout","category":"page"},{"location":"api/cdp/#ChromeDevToolsLite.retry_with_timeout","page":"CDP Implementation","title":"ChromeDevToolsLite.retry_with_timeout","text":"retry_with_timeout(f::Function; timeout::Int=5000, interval::Int=100) -> Any\n\nRetry a function until it succeeds or timeout is reached. Returns the function's return value if successful, throws TimeoutError if timeout is reached.\n\nArguments\n\nf::Function: Function to retry\ntimeout::Int=5000: Maximum time to wait in milliseconds\ninterval::Int=100: Time between retries in milliseconds\n\n\n\n\n\n","category":"function"},{"location":"api/page/#Page","page":"Page","title":"Page","text":"","category":"section"},{"location":"api/page/","page":"Page","title":"Page","text":"Page","category":"page"},{"location":"api/page/#ChromeDevToolsLite.Page","page":"Page","title":"ChromeDevToolsLite.Page","text":"Page\n\nRepresents a single tab or page in the browser.\n\nBase Operations\n\nBase.close(page::Page): Closes the page and cleans up resources\nBase.show(io::IO, page::Page): Displays page information in the format \"Page(id=session_id)\"\n\n\n\n\n\n","category":"type"},{"location":"api/page/","page":"Page","title":"Page","text":"The Page type represents a single page in a browser context.","category":"page"},{"location":"api/page/#Navigation-Methods","page":"Page","title":"Navigation Methods","text":"","category":"section"},{"location":"api/page/","page":"Page","title":"Page","text":"goto\ncontent\nurl\nget_title\nwait_for_load","category":"page"},{"location":"api/page/#ChromeDevToolsLite.goto","page":"Page","title":"ChromeDevToolsLite.goto","text":"goto(page::Page, url::AbstractString; options=Dict()) -> Nothing\n\nNavigate the page to the specified URL and wait for navigation to complete.\n\n\n\n\n\n","category":"function"},{"location":"api/page/#ChromeDevToolsLite.content","page":"Page","title":"ChromeDevToolsLite.content","text":"content(page::Page) -> AbstractString\n\nGets the full HTML content of the page.\n\n\n\n\n\n","category":"function"},{"location":"api/page/#ChromeDevToolsLite.url","page":"Page","title":"ChromeDevToolsLite.url","text":"url(page::Page) -> AbstractString\n\nGets the current URL of the page.\n\n\n\n\n\n","category":"function"},{"location":"api/page/#ChromeDevToolsLite.get_title","page":"Page","title":"ChromeDevToolsLite.get_title","text":"get_title(page::Page) -> AbstractString\n\nGets the current title of the page.\n\n\n\n\n\n","category":"function"},{"location":"api/page/#ChromeDevToolsLite.wait_for_load","page":"Page","title":"ChromeDevToolsLite.wait_for_load","text":"wait_for_load(page::Page; timeout::Int=30000) -> Nothing\n\nWaits for the page load event to fire.\n\n\n\n\n\n","category":"function"},{"location":"api/page/#Element-Selection-and-Waiting","page":"Page","title":"Element Selection and Waiting","text":"","category":"section"},{"location":"api/page/","page":"Page","title":"Page","text":"query_selector\nquery_selector_all\nwait_for_selector\ncount_elements(::Page, ::String)\ncount_elements(::AbstractPage, ::String)","category":"page"},{"location":"api/page/#ChromeDevToolsLite.query_selector","page":"Page","title":"ChromeDevToolsLite.query_selector","text":"query_selector(page::Page, selector::AbstractString) -> Union{ElementHandle, Nothing}\n\nReturns the first element matching the selector.\n\n\n\n\n\n","category":"function"},{"location":"api/page/#ChromeDevToolsLite.query_selector_all","page":"Page","title":"ChromeDevToolsLite.query_selector_all","text":"query_selector_all(page::Page, selector::AbstractString) -> Vector{ElementHandle}\n\nReturns all elements matching the selector.\n\n\n\n\n\nquery_selector_all(page::AbstractPage, selector::AbstractString)\n\nGet all elements matching the selector.\n\n\n\n\n\n","category":"function"},{"location":"api/page/#ChromeDevToolsLite.wait_for_selector","page":"Page","title":"ChromeDevToolsLite.wait_for_selector","text":"wait_for_selector(page::Page, selector::AbstractString; timeout::Int=30000) -> ElementHandle\n\nWaits for an element matching the selector to appear in page.\n\nArguments\n\npage::Page: The page to search in\nselector::AbstractString: CSS selector to match\ntimeout::Int=30000: Maximum time to wait in milliseconds\n\nReturns\n\nElementHandle: Handle to the found element\n\nThrows\n\nTimeoutError: If element is not found within timeout period\n\n\n\n\n\n","category":"function"},{"location":"api/page/#ChromeDevToolsLite.count_elements-Tuple{Page, String}","page":"Page","title":"ChromeDevToolsLite.count_elements","text":"count_elements(page::Page, selector::AbstractString) -> Int\n\nReturns the number of elements matching the selector.\n\n\n\n\n\ncount_elements(page::AbstractPage, selector::AbstractString)\n\nCount the number of elements matching the given CSS selector.\n\n\n\n\n\n","category":"method"},{"location":"api/page/#ChromeDevToolsLite.count_elements-Tuple{AbstractPage, String}","page":"Page","title":"ChromeDevToolsLite.count_elements","text":"count_elements(page::AbstractPage, selector::AbstractString)\n\nCount the number of elements matching the given CSS selector.\n\n\n\n\n\n","category":"method"},{"location":"api/page/#Interaction-Methods","page":"Page","title":"Interaction Methods","text":"","category":"section"},{"location":"api/page/","page":"Page","title":"Page","text":"click(::Page, ::String)\ntype_text(::Page, ::String, ::String)\npress_key\nsubmit_form\nselect_option(::Page, ::String, ::String)\nset_file_input_files","category":"page"},{"location":"api/page/#ChromeDevToolsLite.click-Tuple{Page, String}","page":"Page","title":"ChromeDevToolsLite.click","text":"click(page::Page, selector::AbstractString; options=Dict()) -> Nothing\n\nClicks an element matching the selector.\n\n\n\n\n\n","category":"method"},{"location":"api/page/#ChromeDevToolsLite.type_text-Tuple{Page, String, String}","page":"Page","title":"ChromeDevToolsLite.type_text","text":"type_text(page::Page, selector::AbstractString, text::AbstractString; options=Dict()) -> Nothing\n\nTypes text into an element matching the selector.\n\n\n\n\n\n","category":"method"},{"location":"api/page/#ChromeDevToolsLite.press_key","page":"Page","title":"ChromeDevToolsLite.press_key","text":"press_key(page::Page, key::AbstractString; options=Dict()) -> Nothing\n\nSimulates pressing a keyboard key. The key should be a valid key value like \"Enter\", \"Tab\", \"ArrowLeft\", etc.\n\n\n\n\n\n","category":"function"},{"location":"api/page/#ChromeDevToolsLite.submit_form","page":"Page","title":"ChromeDevToolsLite.submit_form","text":"submit_form(page::Page, selector::AbstractString) -> Bool\n\nSubmits a form element matching the selector. Returns true if successful, false otherwise.\n\n\n\n\n\n","category":"function"},{"location":"api/page/#ChromeDevToolsLite.select_option-Tuple{Page, String, String}","page":"Page","title":"ChromeDevToolsLite.select_option","text":"select_option(page::Page, selector::AbstractString, value::AbstractString; options=Dict()) -> Nothing\n\nSelects an option in a select element matching the selector.\n\n\n\n\n\n","category":"method"},{"location":"api/page/#ChromeDevToolsLite.set_file_input_files","page":"Page","title":"ChromeDevToolsLite.set_file_input_files","text":"set_file_input_files(page::Page, selector::AbstractString, files::Vector{AbstractString})\n\nSets the files to be uploaded in a file input element.\n\n\n\n\n\n","category":"function"},{"location":"api/page/#State-and-Property-Methods","page":"Page","title":"State and Property Methods","text":"","category":"section"},{"location":"api/page/","page":"Page","title":"Page","text":"is_visible(::Page, ::String)\nis_visible(::AbstractPage, ::String)\nget_text(::Page, ::String)\nget_text(::AbstractPage, ::String)\nget_value\nis_checked\nevaluate(::Page, ::String)\nscreenshot(::Page)\nscreenshot(::Page, ::String)\nBase.show(::IO, ::Page)\nBase.close(::Page)","category":"page"},{"location":"api/page/#ChromeDevToolsLite.is_visible-Tuple{Page, String}","page":"Page","title":"ChromeDevToolsLite.is_visible","text":"is_visible(page::Page, selector::AbstractString) -> Bool\n\nReturns true if the element matching the selector is visible.\n\n\n\n\n\nis_visible(page::AbstractPage, selector::AbstractString)\n\nCheck if an element matching the selector is visible.\n\n\n\n\n\n","category":"method"},{"location":"api/page/#ChromeDevToolsLite.is_visible-Tuple{AbstractPage, String}","page":"Page","title":"ChromeDevToolsLite.is_visible","text":"is_visible(page::AbstractPage, selector::AbstractString)\n\nCheck if an element matching the selector is visible.\n\n\n\n\n\n","category":"method"},{"location":"api/page/#ChromeDevToolsLite.get_text-Tuple{Page, String}","page":"Page","title":"ChromeDevToolsLite.get_text","text":"get_text(page::Page, selector::AbstractString) -> Union{AbstractString, Nothing}\n\nGets the text content of the first element matching the selector.\n\n\n\n\n\nget_text(page::AbstractPage, selector::AbstractString)\n\nGet the text content of the first element matching the selector.\n\n\n\n\n\n","category":"method"},{"location":"api/page/#ChromeDevToolsLite.get_text-Tuple{AbstractPage, String}","page":"Page","title":"ChromeDevToolsLite.get_text","text":"get_text(page::AbstractPage, selector::AbstractString)\n\nGet the text content of the first element matching the selector.\n\n\n\n\n\n","category":"method"},{"location":"api/page/#ChromeDevToolsLite.get_value","page":"Page","title":"ChromeDevToolsLite.get_value","text":"get_value(page::Page, selector::AbstractString) -> Union{AbstractString, Nothing}\n\nGets the value of the first form element matching the selector.\n\n\n\n\n\n","category":"function"},{"location":"api/page/#ChromeDevToolsLite.is_checked","page":"Page","title":"ChromeDevToolsLite.is_checked","text":"is_checked(page::Page, selector::AbstractString) -> Bool\n\nReturns true if the checkbox/radio element matching the selector is checked.\n\n\n\n\n\n","category":"function"},{"location":"api/page/#ChromeDevToolsLite.evaluate-Tuple{Page, String}","page":"Page","title":"ChromeDevToolsLite.evaluate","text":"evaluate(page::Page, expression::AbstractString) -> Any\n\nEvaluates JavaScript code in the context of the page.\n\n\n\n\n\n","category":"method"},{"location":"api/page/#ChromeDevToolsLite.screenshot-Tuple{Page}","page":"Page","title":"ChromeDevToolsLite.screenshot","text":"screenshot(page::Page; options=Dict()) -> AbstractString\n\nTakes a screenshot of the page and returns it as a base64-encoded string.\n\n\n\n\n\n","category":"method"},{"location":"api/page/#ChromeDevToolsLite.screenshot-Tuple{Page, String}","page":"Page","title":"ChromeDevToolsLite.screenshot","text":"screenshot(page::Page, path::AbstractString; options=Dict()) -> Nothing\n\nTakes a screenshot of the page and saves it to the specified path.\n\n\n\n\n\n","category":"method"},{"location":"api/page/#Base.show-Tuple{IO, Page}","page":"Page","title":"Base.show","text":"Base.show(io::IO, page::Page)\n\nCustom display for Page instances.\n\n\n\n\n\n","category":"method"},{"location":"api/page/#Base.close-Tuple{Page}","page":"Page","title":"Base.close","text":"Base.close(page::Page)\n\nEnsures proper cleanup of page resources.\n\n\n\n\n\n","category":"method"},{"location":"api/page/#Screenshots","page":"Page","title":"Screenshots","text":"","category":"section"},{"location":"api/page/#screenshot","page":"Page","title":"screenshot","text":"","category":"section"},{"location":"api/page/","page":"Page","title":"Page","text":"screenshot(page::Page; options::Dict=Dict()) -> String","category":"page"},{"location":"api/page/","page":"Page","title":"Page","text":"Take a screenshot of the page. Supports full page, element-specific, and clipped region screenshots.","category":"page"},{"location":"api/page/#Examples","page":"Page","title":"Examples","text":"","category":"section"},{"location":"api/page/","page":"Page","title":"Page","text":"# Full page screenshot\nscreenshot(page, \"full_page.png\")","category":"page"},{"location":"api/page/#Element-specific-screenshot","page":"Page","title":"Element-specific screenshot","text":"","category":"section"},{"location":"api/page/","page":"Page","title":"Page","text":"box = query_selector(page, \"#box1\") screenshot(box, \"element.png\")","category":"page"},{"location":"api/page/#Screenshot-with-clip-region","page":"Page","title":"Screenshot with clip region","text":"","category":"section"},{"location":"api/page/","page":"Page","title":"Page","text":"container = queryselector(page, \".container\") box = getbounding_box(container) screenshot(page, \"clipped.png\", Dict(\"clip\" => box))","category":"page"},{"location":"api/page/","page":"Page","title":"Page","text":"","category":"page"},{"location":"api/page/","page":"Page","title":"Page","text":"julia","category":"page"},{"location":"api/page/#Basic-page-navigation-and-interaction","page":"Page","title":"Basic page navigation and interaction","text":"","category":"section"},{"location":"api/page/","page":"Page","title":"Page","text":"browser = launchbrowser() context = newcontext(browser) page = new_page(context)","category":"page"},{"location":"api/page/","page":"Page","title":"Page","text":"try     # Navigation with wait     goto(page, \"https://example.com\")     waitforselector(page, \"h1\")","category":"page"},{"location":"api/page/","page":"Page","title":"Page","text":"# Multiple element selection\nitems = query_selector_all(page, \".item\")\nfor item in items\n    text = get_text(item)\n    println(\"Found item: \\$text\")\nend\n\n# Form interaction\ntype_text(page, \"#search\", \"query\")\nclick(page, \"#submit\")\n\n# Take screenshot\nscreenshot(page, \"page.png\")\n\n# Element-specific screenshot\nheader = query_selector(page, \"header\")\nscreenshot(header, \"header.png\")","category":"page"},{"location":"api/page/","page":"Page","title":"Page","text":"finally     close(page) end","category":"page"},{"location":"api/page/","page":"Page","title":"Page","text":"\n### Common Patterns\n\n#### Form Submission","category":"page"},{"location":"api/page/","page":"Page","title":"Page","text":"julia","category":"page"},{"location":"api/page/#From-examples/03*page*interactions.jl","page":"Page","title":"From examples/03pageinteractions.jl","text":"","category":"section"},{"location":"api/page/","page":"Page","title":"Page","text":"goto(page, \"file://form.html\") typetext(page, \"#name\", \"John Doe\") selectoption(page, \"#color\", \"blue\") click(page, \"button[type='submit']\")","category":"page"},{"location":"api/page/","page":"Page","title":"Page","text":"\n#### Waiting for Elements","category":"page"},{"location":"api/page/","page":"Page","title":"Page","text":"julia","category":"page"},{"location":"api/page/#Wait-for-specific-element-with-timeout","page":"Page","title":"Wait for specific element with timeout","text":"","category":"section"},{"location":"api/page/","page":"Page","title":"Page","text":"element = waitforselector(page, \"#dynamic-content\", timeout=5000)","category":"page"},{"location":"api/page/#Check-element-visibility","page":"Page","title":"Check element visibility","text":"","category":"section"},{"location":"api/page/","page":"Page","title":"Page","text":"if is_visible(element)     println(\"Element is visible\") end ```","category":"page"},{"location":"api/page/#Error-Handling","page":"Page","title":"Error Handling","text":"","category":"section"},{"location":"api/page/","page":"Page","title":"Page","text":"Page operations can throw:","category":"page"},{"location":"api/page/","page":"Page","title":"Page","text":"NavigationError: When page navigation fails\nElementNotFoundError: When an element cannot be found\nTimeoutError: When operations exceed their timeout limit\nEvaluationError: When JavaScript evaluation fails","category":"page"}]
}
